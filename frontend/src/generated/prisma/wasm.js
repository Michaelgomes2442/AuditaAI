
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  role: 'role',
  tier: 'tier',
  permissions: 'permissions',
  orgId: 'orgId',
  status: 'status',
  lastLoginAt: 'lastLoginAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  twoFactorEnabled: 'twoFactorEnabled',
  twoFactorSecret: 'twoFactorSecret',
  backupCodes: 'backupCodes',
  failedLoginAttempts: 'failedLoginAttempts',
  lockedUntil: 'lockedUntil',
  passwordChangedAt: 'passwordChangedAt',
  ssoProvider: 'ssoProvider',
  ssoId: 'ssoId',
  ssoMetadata: 'ssoMetadata',
  currentPersona: 'currentPersona',
  personaLocked: 'personaLocked',
  lamportCounter: 'lamportCounter',
  lastReceiptId: 'lastReceiptId'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  plan: 'plan',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  name: 'name',
  orgId: 'orgId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamMemberScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  userId: 'userId',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SharedTestCollectionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  teamId: 'teamId',
  createdBy: 'createdBy',
  isPublic: 'isPublic',
  tags: 'tags',
  testIds: 'testIds',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RateLimitQuotaScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  endpoint: 'endpoint',
  limit: 'limit',
  used: 'used',
  resetAt: 'resetAt',
  windowMinutes: 'windowMinutes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TestTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  category: 'category',
  userId: 'userId',
  teamId: 'teamId',
  isPublic: 'isPublic',
  isPredefined: 'isPredefined',
  tags: 'tags',
  config: 'config',
  sharedWith: 'sharedWith',
  useCount: 'useCount',
  favoriteCount: 'favoriteCount',
  version: 'version',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WebhookScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  userId: 'userId',
  teamId: 'teamId',
  url: 'url',
  secret: 'secret',
  events: 'events',
  method: 'method',
  headers: 'headers',
  payloadTemplate: 'payloadTemplate',
  isActive: 'isActive',
  retryEnabled: 'retryEnabled',
  maxRetries: 'maxRetries',
  retryDelay: 'retryDelay',
  totalCalls: 'totalCalls',
  successCount: 'successCount',
  failureCount: 'failureCount',
  lastTriggered: 'lastTriggered',
  lastSuccess: 'lastSuccess',
  lastFailure: 'lastFailure',
  lastError: 'lastError',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WebhookLogScalarFieldEnum = {
  id: 'id',
  webhookId: 'webhookId',
  event: 'event',
  payload: 'payload',
  url: 'url',
  method: 'method',
  headers: 'headers',
  statusCode: 'statusCode',
  responseBody: 'responseBody',
  responseTime: 'responseTime',
  attempt: 'attempt',
  success: 'success',
  error: 'error',
  createdAt: 'createdAt'
};

exports.Prisma.ApiRateLimitScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  limitType: 'limitType',
  limitPeriod: 'limitPeriod',
  maxLimit: 'maxLimit',
  currentUsage: 'currentUsage',
  resetAt: 'resetAt',
  warningThreshold: 'warningThreshold',
  lastWarningAt: 'lastWarningAt',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  expiresAt: 'expiresAt',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  createdAt: 'createdAt',
  lastUsedAt: 'lastUsedAt'
};

exports.Prisma.AuditRecordScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  category: 'category',
  details: 'details',
  metadata: 'metadata',
  status: 'status',
  lamport: 'lamport',
  hashPointer: 'hashPointer',
  createdAt: 'createdAt'
};

exports.Prisma.LamportStateScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  lamport: 'lamport',
  metadata: 'metadata',
  modified: 'modified'
};

exports.Prisma.BudgetScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  limit: 'limit',
  period: 'period',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegressionBaselineScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  modelName: 'modelName',
  modelVersion: 'modelVersion',
  testType: 'testType',
  avgResponseTime: 'avgResponseTime',
  avgCost: 'avgCost',
  avgQualityScore: 'avgQualityScore',
  avgAccuracy: 'avgAccuracy',
  successRate: 'successRate',
  alertThreshold: 'alertThreshold',
  sampleSize: 'sampleSize',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FeedbackScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  category: 'category',
  priority: 'priority',
  subject: 'subject',
  message: 'message',
  url: 'url',
  userAgent: 'userAgent',
  metadata: 'metadata',
  attachmentUrls: 'attachmentUrls',
  status: 'status',
  assignedTo: 'assignedTo',
  response: 'response',
  respondedAt: 'respondedAt',
  respondedBy: 'respondedBy',
  sentiment: 'sentiment',
  sentimentScore: 'sentimentScore',
  upvotes: 'upvotes',
  isPublic: 'isPublic',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  resolvedAt: 'resolvedAt'
};

exports.Prisma.IpWhitelistScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  orgId: 'orgId',
  ipAddress: 'ipAddress',
  description: 'description',
  isActive: 'isActive',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastUsedAt: 'lastUsedAt'
};

exports.Prisma.SecurityEventScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  eventType: 'eventType',
  severity: 'severity',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  description: 'description',
  metadata: 'metadata',
  resolved: 'resolved',
  resolvedBy: 'resolvedBy',
  resolvedAt: 'resolvedAt',
  createdAt: 'createdAt'
};

exports.Prisma.TwoFactorBackupScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  code: 'code',
  used: 'used',
  usedAt: 'usedAt',
  createdAt: 'createdAt'
};

exports.Prisma.SSOConfigurationScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  provider: 'provider',
  enabled: 'enabled',
  samlEntryPoint: 'samlEntryPoint',
  samlIssuer: 'samlIssuer',
  samlCert: 'samlCert',
  samlCallbackUrl: 'samlCallbackUrl',
  samlLogoutUrl: 'samlLogoutUrl',
  oauthClientId: 'oauthClientId',
  oauthClientSecret: 'oauthClientSecret',
  oauthAuthUrl: 'oauthAuthUrl',
  oauthTokenUrl: 'oauthTokenUrl',
  oauthUserInfoUrl: 'oauthUserInfoUrl',
  oauthScopes: 'oauthScopes',
  domainRestriction: 'domainRestriction',
  jitProvisioning: 'jitProvisioning',
  defaultRole: 'defaultRole',
  defaultTier: 'defaultTier',
  metadata: 'metadata',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastUsedAt: 'lastUsedAt'
};

exports.Prisma.SSOSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  sessionId: 'sessionId',
  nameId: 'nameId',
  sessionIndex: 'sessionIndex',
  attributes: 'attributes',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  lastActivityAt: 'lastActivityAt'
};

exports.Prisma.SSOAuditLogScalarFieldEnum = {
  id: 'id',
  orgId: 'orgId',
  userId: 'userId',
  provider: 'provider',
  eventType: 'eventType',
  success: 'success',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  errorMessage: 'errorMessage',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationPreferenceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  emailEnabled: 'emailEnabled',
  testComplete: 'testComplete',
  batchComplete: 'batchComplete',
  scheduledTestComplete: 'scheduledTestComplete',
  alertsEnabled: 'alertsEnabled',
  lowScoreThreshold: 'lowScoreThreshold',
  highScoreThreshold: 'highScoreThreshold',
  scoreDropAlert: 'scoreDropAlert',
  witnessFailureAlert: 'witnessFailureAlert',
  dailyReport: 'dailyReport',
  weeklyReport: 'weeklyReport',
  monthlyReport: 'monthlyReport',
  reportTime: 'reportTime',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TestResultScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  modelName: 'modelName',
  modelProvider: 'modelProvider',
  prompt: 'prompt',
  response: 'response',
  criesScore: 'criesScore',
  responseTime: 'responseTime',
  tokenCount: 'tokenCount',
  cost: 'cost',
  status: 'status',
  errorMessage: 'errorMessage',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.LamportCounterScalarFieldEnum = {
  id: 'id',
  currentValue: 'currentValue',
  lastUpdated: 'lastUpdated',
  lastReceiptId: 'lastReceiptId',
  metadata: 'metadata'
};

exports.Prisma.BENReceiptScalarFieldEnum = {
  id: 'id',
  receiptType: 'receiptType',
  lamportClock: 'lamportClock',
  realTimestamp: 'realTimestamp',
  userId: 'userId',
  persona: 'persona',
  track: 'track',
  payload: 'payload',
  digest: 'digest',
  previousDigest: 'previousDigest',
  baselineDigest: 'baselineDigest',
  witnessModel: 'witnessModel',
  witnessSignature: 'witnessSignature',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.BENSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  persona: 'persona',
  priority: 'priority',
  locked: 'locked',
  startedAt: 'startedAt',
  endedAt: 'endedAt',
  duration: 'duration',
  startLamport: 'startLamport',
  endLamport: 'endLamport',
  switchReason: 'switchReason',
  metadata: 'metadata'
};

exports.Prisma.TriTrackHandoffScalarFieldEnum = {
  id: 'id',
  fromTrack: 'fromTrack',
  toTrack: 'toTrack',
  status: 'status',
  fromReceiptId: 'fromReceiptId',
  toReceiptId: 'toReceiptId',
  initiatedAt: 'initiatedAt',
  completedAt: 'completedAt',
  latencyMs: 'latencyMs',
  exceededLimit: 'exceededLimit',
  payload: 'payload',
  result: 'result',
  errorMessage: 'errorMessage',
  metadata: 'metadata'
};

exports.Prisma.WitnessSignatureScalarFieldEnum = {
  id: 'id',
  modelName: 'modelName',
  modelFingerprint: 'modelFingerprint',
  receiptId: 'receiptId',
  receiptDigest: 'receiptDigest',
  signature: 'signature',
  signedAt: 'signedAt',
  lamportClock: 'lamportClock',
  verified: 'verified',
  verifiedAt: 'verifiedAt',
  verificationData: 'verificationData',
  metadata: 'metadata'
};

exports.Prisma.CRIESComputationScalarFieldEnum = {
  id: 'id',
  testResultId: 'testResultId',
  userId: 'userId',
  sigmaWindow: 'sigmaWindow',
  tauThreshold: 'tauThreshold',
  piPolicy: 'piPolicy',
  citationQuality: 'citationQuality',
  criesScore: 'criesScore',
  lamportClock: 'lamportClock',
  computedAt: 'computedAt',
  receiptId: 'receiptId',
  analysisData: 'analysisData',
  metadata: 'metadata'
};

exports.Prisma.ZScanVerificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  totalRules: 'totalRules',
  passed: 'passed',
  warnings: 'warnings',
  critical: 'critical',
  results: 'results',
  config: 'config',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  ARCHITECT: 'ARCHITECT',
  AUDITOR: 'AUDITOR',
  WITNESS: 'WITNESS'
};

exports.Permission = exports.$Enums.Permission = {
  READ_LOGS: 'READ_LOGS',
  WRITE_LOGS: 'WRITE_LOGS',
  MANAGE_USERS: 'MANAGE_USERS',
  MANAGE_TEAMS: 'MANAGE_TEAMS',
  VERIFY_RECORDS: 'VERIFY_RECORDS',
  EXPORT_DATA: 'EXPORT_DATA',
  VIEW_ANALYTICS: 'VIEW_ANALYTICS',
  MANAGE_SETTINGS: 'MANAGE_SETTINGS'
};

exports.TeamRole = exports.$Enums.TeamRole = {
  OWNER: 'OWNER',
  ADMIN: 'ADMIN',
  MEMBER: 'MEMBER',
  VIEWER: 'VIEWER'
};

exports.UserStatus = exports.$Enums.UserStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED'
};

exports.UserTier = exports.$Enums.UserTier = {
  FREE: 'FREE',
  PAID: 'PAID',
  ARCHITECT: 'ARCHITECT'
};

exports.OrgStatus = exports.$Enums.OrgStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED',
  TRIAL: 'TRIAL'
};

exports.PlanType = exports.$Enums.PlanType = {
  TRIAL: 'TRIAL',
  BASIC: 'BASIC',
  PRO: 'PRO',
  ENTERPRISE: 'ENTERPRISE'
};

exports.AuditCategory = exports.$Enums.AuditCategory = {
  AUTH: 'AUTH',
  ACCESS: 'ACCESS',
  DATA: 'DATA',
  CONFIG: 'CONFIG',
  VERIFICATION: 'VERIFICATION',
  SYSTEM: 'SYSTEM'
};

exports.AuditStatus = exports.$Enums.AuditStatus = {
  SUCCESS: 'SUCCESS',
  FAILURE: 'FAILURE',
  WARNING: 'WARNING',
  INFO: 'INFO'
};

exports.FeedbackType = exports.$Enums.FeedbackType = {
  BUG: 'BUG',
  FEATURE: 'FEATURE',
  IMPROVEMENT: 'IMPROVEMENT',
  QUESTION: 'QUESTION',
  OTHER: 'OTHER'
};

exports.FeedbackCategory = exports.$Enums.FeedbackCategory = {
  UI_UX: 'UI_UX',
  PERFORMANCE: 'PERFORMANCE',
  ACCURACY: 'ACCURACY',
  DOCUMENTATION: 'DOCUMENTATION',
  API: 'API',
  BILLING: 'BILLING',
  SECURITY: 'SECURITY',
  GENERAL: 'GENERAL'
};

exports.FeedbackPriority = exports.$Enums.FeedbackPriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.FeedbackStatus = exports.$Enums.FeedbackStatus = {
  OPEN: 'OPEN',
  IN_PROGRESS: 'IN_PROGRESS',
  RESOLVED: 'RESOLVED',
  CLOSED: 'CLOSED',
  WONT_FIX: 'WONT_FIX'
};

exports.SecurityEventType = exports.$Enums.SecurityEventType = {
  LOGIN_SUCCESS: 'LOGIN_SUCCESS',
  LOGIN_FAILED: 'LOGIN_FAILED',
  LOGOUT: 'LOGOUT',
  PASSWORD_CHANGE: 'PASSWORD_CHANGE',
  PASSWORD_RESET: 'PASSWORD_RESET',
  TWO_FACTOR_ENABLED: 'TWO_FACTOR_ENABLED',
  TWO_FACTOR_DISABLED: 'TWO_FACTOR_DISABLED',
  TWO_FACTOR_VERIFIED: 'TWO_FACTOR_VERIFIED',
  TWO_FACTOR_FAILED: 'TWO_FACTOR_FAILED',
  ACCOUNT_LOCKED: 'ACCOUNT_LOCKED',
  ACCOUNT_UNLOCKED: 'ACCOUNT_UNLOCKED',
  IP_WHITELIST_ADDED: 'IP_WHITELIST_ADDED',
  IP_WHITELIST_REMOVED: 'IP_WHITELIST_REMOVED',
  IP_BLOCKED: 'IP_BLOCKED',
  SESSION_CREATED: 'SESSION_CREATED',
  SESSION_TERMINATED: 'SESSION_TERMINATED',
  PERMISSION_CHANGED: 'PERMISSION_CHANGED',
  SUSPICIOUS_ACTIVITY: 'SUSPICIOUS_ACTIVITY'
};

exports.SecuritySeverity = exports.$Enums.SecuritySeverity = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.SSOProvider = exports.$Enums.SSOProvider = {
  SAML: 'SAML',
  AZURE_AD: 'AZURE_AD',
  GOOGLE: 'GOOGLE',
  OKTA: 'OKTA',
  GENERIC_OAUTH: 'GENERIC_OAUTH'
};

exports.SSOEventType = exports.$Enums.SSOEventType = {
  SSO_LOGIN_SUCCESS: 'SSO_LOGIN_SUCCESS',
  SSO_LOGIN_FAILED: 'SSO_LOGIN_FAILED',
  SSO_LOGOUT: 'SSO_LOGOUT',
  SSO_CONFIG_CREATED: 'SSO_CONFIG_CREATED',
  SSO_CONFIG_UPDATED: 'SSO_CONFIG_UPDATED',
  SSO_CONFIG_DELETED: 'SSO_CONFIG_DELETED',
  SSO_CONFIG_ENABLED: 'SSO_CONFIG_ENABLED',
  SSO_CONFIG_DISABLED: 'SSO_CONFIG_DISABLED',
  JIT_USER_CREATED: 'JIT_USER_CREATED',
  JIT_USER_UPDATED: 'JIT_USER_UPDATED',
  SSO_SESSION_EXPIRED: 'SSO_SESSION_EXPIRED',
  SSO_CALLBACK_ERROR: 'SSO_CALLBACK_ERROR',
  SAML_ASSERTION_ERROR: 'SAML_ASSERTION_ERROR',
  OAUTH_TOKEN_ERROR: 'OAUTH_TOKEN_ERROR'
};

exports.BENPersona = exports.$Enums.BENPersona = {
  USER: 'USER',
  VERIFIER: 'VERIFIER',
  ANALYST: 'ANALYST',
  GOVERNOR: 'GOVERNOR',
  ARCHITECT: 'ARCHITECT'
};

exports.ReceiptType = exports.$Enums.ReceiptType = {
  BOOT_CONFIRM: 'BOOT_CONFIRM',
  ANALYSIS: 'ANALYSIS',
  DIRECTIVE: 'DIRECTIVE',
  RESULT: 'RESULT',
  APPEND: 'APPEND',
  SYNC_POINT: 'SYNC_POINT'
};

exports.TrackType = exports.$Enums.TrackType = {
  BEN_CORE: 'BEN_CORE',
  AUDITAAI: 'AUDITAAI',
  HUMAN: 'HUMAN'
};

exports.HandoffStatus = exports.$Enums.HandoffStatus = {
  INITIATED: 'INITIATED',
  IN_TRANSIT: 'IN_TRANSIT',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  TIMEOUT: 'TIMEOUT'
};

exports.Prisma.ModelName = {
  User: 'User',
  Organization: 'Organization',
  Team: 'Team',
  TeamMember: 'TeamMember',
  SharedTestCollection: 'SharedTestCollection',
  RateLimitQuota: 'RateLimitQuota',
  TestTemplate: 'TestTemplate',
  Webhook: 'Webhook',
  WebhookLog: 'WebhookLog',
  ApiRateLimit: 'ApiRateLimit',
  Session: 'Session',
  AuditRecord: 'AuditRecord',
  LamportState: 'LamportState',
  Budget: 'Budget',
  RegressionBaseline: 'RegressionBaseline',
  Feedback: 'Feedback',
  IpWhitelist: 'IpWhitelist',
  SecurityEvent: 'SecurityEvent',
  TwoFactorBackup: 'TwoFactorBackup',
  SSOConfiguration: 'SSOConfiguration',
  SSOSession: 'SSOSession',
  SSOAuditLog: 'SSOAuditLog',
  NotificationPreference: 'NotificationPreference',
  TestResult: 'TestResult',
  LamportCounter: 'LamportCounter',
  BENReceipt: 'BENReceipt',
  BENSession: 'BENSession',
  TriTrackHandoff: 'TriTrackHandoff',
  WitnessSignature: 'WitnessSignature',
  CRIESComputation: 'CRIESComputation',
  ZScanVerification: 'ZScanVerification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/michaelgomes/AuditaAI/frontend/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/michaelgomes/AuditaAI/frontend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id           Int           @id @default(autoincrement())\n  email        String        @unique\n  password     String\n  name         String?\n  role         Role          @default(USER)\n  tier         UserTier      @default(FREE)\n  permissions  Permission[]  @default([])\n  organization Organization? @relation(fields: [orgId], references: [id])\n  orgId        Int?\n  status       UserStatus    @default(ACTIVE)\n  lastLoginAt  DateTime?\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime      @updatedAt\n\n  // Security features\n  twoFactorEnabled    Boolean   @default(false)\n  twoFactorSecret     String?\n  backupCodes         String[]  @default([])\n  failedLoginAttempts Int       @default(0)\n  lockedUntil         DateTime?\n  passwordChangedAt   DateTime?\n\n  // SSO features\n  ssoProvider String? // 'saml', 'azure_ad', 'google', 'okta'\n  ssoId       String? @unique // External SSO user ID\n  ssoMetadata Json? // Additional SSO metadata\n\n  // BEN Runtime features\n  currentPersona BENPersona @default(USER)\n  personaLocked  Boolean    @default(false)\n  lamportCounter Int        @default(0)\n  lastReceiptId  Int?\n\n  // Relations\n  sessions            Session[]\n  audits              AuditRecord[]\n  teams               TeamMember[]\n  notifications       NotificationPreference?\n  budgets             Budget[]\n  regressionBaselines RegressionBaseline[]\n  feedbacks           Feedback[]\n  benReceipts         BENReceipt[]\n  benSessions         BENSession[]\n  zscans              ZScanVerification[]\n}\n\nmodel Organization {\n  id         Int                @id @default(autoincrement())\n  name       String\n  plan       PlanType           @default(TRIAL)\n  status     OrgStatus          @default(ACTIVE)\n  users      User[]\n  teams      Team[]\n  ssoConfigs SSOConfiguration[]\n  createdAt  DateTime           @default(now())\n  updatedAt  DateTime           @updatedAt\n}\n\nmodel Team {\n  id           Int          @id @default(autoincrement())\n  name         String\n  organization Organization @relation(fields: [orgId], references: [id])\n  orgId        Int\n  members      TeamMember[]\n  createdAt    DateTime     @default(now())\n  updatedAt    DateTime     @updatedAt\n}\n\nmodel TeamMember {\n  id        Int      @id @default(autoincrement())\n  team      Team     @relation(fields: [teamId], references: [id])\n  teamId    Int\n  user      User     @relation(fields: [userId], references: [id])\n  userId    Int\n  role      TeamRole @default(MEMBER)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([teamId, userId])\n}\n\nmodel SharedTestCollection {\n  id          Int      @id @default(autoincrement())\n  name        String\n  description String?  @db.Text\n  teamId      Int\n  createdBy   Int\n  isPublic    Boolean  @default(false)\n  tags        String[] @default([])\n  testIds     Int[]    @default([]) // References to TestResult IDs\n  metadata    Json?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@index([teamId, createdAt])\n  @@index([createdBy, createdAt])\n}\n\nmodel RateLimitQuota {\n  id            Int      @id @default(autoincrement())\n  userId        Int\n  provider      String // 'openai', 'anthropic', 'google', etc.\n  endpoint      String // 'chat', 'embeddings', etc.\n  limit         Int // Max requests allowed\n  used          Int      @default(0)\n  resetAt       DateTime\n  windowMinutes Int      @default(60) // Rate limit window duration\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  @@unique([userId, provider, endpoint])\n  @@index([userId, resetAt])\n  @@index([provider, endpoint])\n}\n\nmodel TestTemplate {\n  id           Int      @id @default(autoincrement())\n  name         String\n  description  String?  @db.Text\n  category     String // 'chatbot', 'content-generation', 'data-extraction', 'custom'\n  userId       Int // Creator\n  teamId       Int? // Optional team ownership\n  isPublic     Boolean  @default(false)\n  isPredefined Boolean  @default(false) // System templates vs user templates\n  tags         String[] @default([])\n\n  // Template configuration\n  config Json // Full test configuration (prompts, models, parameters)\n\n  // Sharing and collaboration\n  sharedWith Int[] @default([]) // User IDs with access\n\n  // Usage stats\n  useCount      Int @default(0)\n  favoriteCount Int @default(0)\n\n  // Metadata\n  version   String   @default(\"1.0.0\")\n  metadata  Json?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([userId, createdAt])\n  @@index([category, isPublic])\n  @@index([teamId, createdAt])\n  @@index([isPredefined, category])\n}\n\nmodel Webhook {\n  id          Int     @id @default(autoincrement())\n  name        String\n  description String? @db.Text\n  userId      Int\n  teamId      Int?\n  url         String  @db.Text\n  secret      String? // For HMAC signature verification\n\n  // Event triggers\n  events String[] @default([]) // ['test.completed', 'test.failed', 'threshold.breached']\n\n  // Configuration\n  method          String @default(\"POST\") // HTTP method\n  headers         Json? // Custom headers\n  payloadTemplate Json? // Custom payload format\n\n  // State\n  isActive Boolean @default(true)\n\n  // Retry configuration\n  retryEnabled Boolean @default(true)\n  maxRetries   Int     @default(3)\n  retryDelay   Int     @default(1000) // milliseconds\n\n  // Statistics\n  totalCalls    Int       @default(0)\n  successCount  Int       @default(0)\n  failureCount  Int       @default(0)\n  lastTriggered DateTime?\n  lastSuccess   DateTime?\n  lastFailure   DateTime?\n  lastError     String?   @db.Text\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([userId, isActive])\n  @@index([teamId, isActive])\n  @@index([events])\n}\n\nmodel WebhookLog {\n  id        Int    @id @default(autoincrement())\n  webhookId Int\n  event     String // Event that triggered the webhook\n  payload   Json // Payload sent\n\n  // Request details\n  url     String @db.Text\n  method  String\n  headers Json?\n\n  // Response details\n  statusCode   Int?\n  responseBody String? @db.Text\n  responseTime Int? // milliseconds\n\n  // Retry information\n  attempt Int     @default(1)\n  success Boolean\n  error   String? @db.Text\n\n  createdAt DateTime @default(now())\n\n  @@index([webhookId, createdAt])\n  @@index([event, createdAt])\n  @@index([success, createdAt])\n}\n\nmodel ApiRateLimit {\n  id               Int       @id @default(autoincrement())\n  userId           Int\n  provider         String // 'openai', 'anthropic', 'google', etc.\n  limitType        String // 'requests', 'tokens'\n  limitPeriod      String // 'minute', 'hour', 'day', 'month'\n  maxLimit         Int // Maximum allowed\n  currentUsage     Int       @default(0)\n  resetAt          DateTime\n  warningThreshold Int       @default(80) // Percentage\n  lastWarningAt    DateTime?\n  metadata         Json?\n  createdAt        DateTime  @default(now())\n  updatedAt        DateTime  @updatedAt\n\n  @@unique([userId, provider, limitType, limitPeriod])\n  @@index([userId, provider, limitType])\n  @@index([resetAt])\n}\n\nmodel Session {\n  id         Int      @id @default(autoincrement())\n  userId     Int\n  expiresAt  DateTime\n  userAgent  String?\n  ipAddress  String?\n  createdAt  DateTime @default(now())\n  lastUsedAt DateTime @updatedAt\n  user       User     @relation(fields: [userId], references: [id])\n}\n\nmodel AuditRecord {\n  id          Int           @id @default(autoincrement())\n  userId      Int\n  action      String\n  category    AuditCategory\n  details     Json?\n  metadata    Json?\n  status      AuditStatus   @default(SUCCESS)\n  lamport     Int\n  hashPointer String? // For blockchain verification\n  createdAt   DateTime      @default(now())\n  user        User          @relation(fields: [userId], references: [id])\n\n  @@index([category, createdAt])\n  @@index([userId, createdAt])\n}\n\nmodel LamportState {\n  id       Int      @id @default(autoincrement())\n  key      String   @unique\n  value    String\n  lamport  Int\n  metadata Json?\n  modified DateTime @default(now())\n\n  @@index([key, lamport])\n}\n\nmodel Budget {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  limit     Float // Monthly budget limit in USD\n  period    String   @default(\"monthly\") // monthly, weekly, yearly\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  user      User     @relation(fields: [userId], references: [id])\n\n  @@index([userId, createdAt])\n}\n\nmodel RegressionBaseline {\n  id           Int     @id @default(autoincrement())\n  userId       Int\n  modelName    String\n  modelVersion String? // e.g., \"gpt-4-0125-preview\"\n  testType     String // e.g., \"general\", \"coding\", \"reasoning\"\n\n  // Baseline metrics\n  avgResponseTime Float\n  avgCost         Float\n  avgQualityScore Float\n  avgAccuracy     Float\n  successRate     Float\n\n  // Threshold for alerts (percentage degradation)\n  alertThreshold Float @default(10.0) // Alert if performance drops by 10%\n\n  // Metadata\n  sampleSize Int // Number of tests used to establish baseline\n  isActive   Boolean  @default(true)\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@unique([userId, modelName, modelVersion, testType])\n  @@index([userId, modelName, isActive])\n}\n\nmodel Feedback {\n  id       Int              @id @default(autoincrement())\n  userId   Int\n  type     FeedbackType\n  category FeedbackCategory\n  priority FeedbackPriority @default(MEDIUM)\n  subject  String\n  message  String           @db.Text\n\n  // Context information\n  url       String? // Page where feedback was submitted\n  userAgent String?\n  metadata  Json? // Additional context (browser, viewport, etc.)\n\n  // Attachment support\n  attachmentUrls String[] @default([])\n\n  // Status tracking\n  status     FeedbackStatus @default(OPEN)\n  assignedTo Int? // Admin user ID\n\n  // Response\n  response    String?   @db.Text\n  respondedAt DateTime?\n  respondedBy Int?\n\n  // Sentiment analysis\n  sentiment      String? // 'positive', 'neutral', 'negative'\n  sentimentScore Float? // 0-100\n\n  // Voting/rating\n  upvotes  Int     @default(0)\n  isPublic Boolean @default(false) // Show in public roadmap\n\n  // Timestamps\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n  resolvedAt DateTime?\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@index([userId, createdAt])\n  @@index([type, status])\n  @@index([category, status])\n  @@index([priority, status])\n  @@index([assignedTo, status])\n}\n\nmodel IpWhitelist {\n  id          Int       @id @default(autoincrement())\n  userId      Int?\n  orgId       Int?\n  ipAddress   String // IP address or CIDR range (e.g., \"192.168.1.0/24\")\n  description String?\n  isActive    Boolean   @default(true)\n  createdBy   Int\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  lastUsedAt  DateTime?\n\n  @@index([userId, isActive])\n  @@index([orgId, isActive])\n  @@index([ipAddress])\n}\n\nmodel SecurityEvent {\n  id          Int               @id @default(autoincrement())\n  userId      Int?\n  eventType   SecurityEventType\n  severity    SecuritySeverity  @default(MEDIUM)\n  ipAddress   String?\n  userAgent   String?\n  description String            @db.Text\n  metadata    Json? // Additional event data\n  resolved    Boolean           @default(false)\n  resolvedBy  Int?\n  resolvedAt  DateTime?\n  createdAt   DateTime          @default(now())\n\n  @@index([userId, createdAt])\n  @@index([eventType, createdAt])\n  @@index([severity, resolved])\n}\n\nmodel TwoFactorBackup {\n  id        Int       @id @default(autoincrement())\n  userId    Int\n  code      String    @unique\n  used      Boolean   @default(false)\n  usedAt    DateTime?\n  createdAt DateTime  @default(now())\n\n  @@index([userId, used])\n  @@index([code])\n}\n\nmodel SSOConfiguration {\n  id           Int          @id @default(autoincrement())\n  organization Organization @relation(fields: [orgId], references: [id])\n  orgId        Int\n  provider     SSOProvider\n  enabled      Boolean      @default(false)\n\n  // SAML Configuration\n  samlEntryPoint  String? // IdP SSO URL\n  samlIssuer      String? // IdP Issuer/Entity ID\n  samlCert        String? @db.Text // IdP Certificate\n  samlCallbackUrl String? // SP Callback URL\n  samlLogoutUrl   String? // IdP Logout URL\n\n  // OAuth 2.0 Configuration\n  oauthClientId     String?\n  oauthClientSecret String?\n  oauthAuthUrl      String?\n  oauthTokenUrl     String?\n  oauthUserInfoUrl  String?\n  oauthScopes       String[] @default([])\n\n  // Common Settings\n  domainRestriction String[] @default([]) // Email domain whitelist\n  jitProvisioning   Boolean  @default(true) // Just-In-Time user creation\n  defaultRole       Role     @default(USER)\n  defaultTier       UserTier @default(FREE)\n\n  // Metadata\n  metadata   Json? // Additional provider-specific data\n  createdBy  Int\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n  lastUsedAt DateTime?\n\n  @@unique([orgId, provider])\n  @@index([provider, enabled])\n}\n\nmodel SSOSession {\n  id             Int         @id @default(autoincrement())\n  userId         Int\n  provider       SSOProvider\n  sessionId      String      @unique // SSO session ID\n  nameId         String? // SAML NameID or OAuth sub\n  sessionIndex   String? // SAML SessionIndex\n  attributes     Json? // User attributes from IdP\n  ipAddress      String?\n  userAgent      String?\n  expiresAt      DateTime\n  createdAt      DateTime    @default(now())\n  lastActivityAt DateTime    @default(now())\n\n  @@index([userId, provider])\n  @@index([sessionId])\n  @@index([expiresAt])\n}\n\nmodel SSOAuditLog {\n  id           Int          @id @default(autoincrement())\n  orgId        Int?\n  userId       Int?\n  provider     SSOProvider\n  eventType    SSOEventType\n  success      Boolean\n  ipAddress    String?\n  userAgent    String?\n  errorMessage String?      @db.Text\n  metadata     Json?\n  createdAt    DateTime     @default(now())\n\n  @@index([orgId, createdAt])\n  @@index([userId, createdAt])\n  @@index([provider, eventType])\n}\n\nmodel NotificationPreference {\n  id     Int  @id @default(autoincrement())\n  user   User @relation(fields: [userId], references: [id])\n  userId Int  @unique\n\n  // Email notifications\n  emailEnabled          Boolean @default(true)\n  testComplete          Boolean @default(true)\n  batchComplete         Boolean @default(true)\n  scheduledTestComplete Boolean @default(true)\n\n  // Performance alerts\n  alertsEnabled       Boolean @default(true)\n  lowScoreThreshold   Float   @default(70)\n  highScoreThreshold  Float   @default(90)\n  scoreDropAlert      Boolean @default(true)\n  witnessFailureAlert Boolean @default(true)\n\n  // Scheduled reports\n  dailyReport   Boolean @default(false)\n  weeklyReport  Boolean @default(true)\n  monthlyReport Boolean @default(false)\n  reportTime    String  @default(\"09:00\") // HH:mm format\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel TestResult {\n  id            Int      @id @default(autoincrement())\n  userId        Int\n  modelName     String\n  modelProvider String\n  prompt        String   @db.Text\n  response      String?  @db.Text\n  criesScore    Float?\n  responseTime  Int? // milliseconds\n  tokenCount    Int?\n  cost          Float?\n  status        String // 'completed', 'failed', 'pending'\n  errorMessage  String?  @db.Text\n  metadata      Json? // Additional test metadata\n  createdAt     DateTime @default(now())\n\n  @@index([userId, createdAt])\n  @@index([modelName, createdAt])\n  @@index([userId, modelName, createdAt])\n}\n\n// ===== BEN Runtime Models =====\n\n// Global Lamport counter for monotonic time tracking\nmodel LamportCounter {\n  id            Int      @id @default(1)\n  currentValue  Int      @default(0)\n  lastUpdated   DateTime @default(now())\n  lastReceiptId Int?\n  metadata      Json? // Additional counter metadata\n\n  @@map(\"lamport_counter\")\n}\n\n// BEN Receipt storage (Δ-Receipt state machine)\nmodel BENReceipt {\n  id            Int         @id @default(autoincrement())\n  receiptType   ReceiptType\n  lamportClock  Int\n  realTimestamp DateTime    @default(now())\n  userId        Int?\n  user          User?       @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  // Receipt content\n  persona BENPersona @default(USER)\n  track   TrackType?\n  payload Json // Receipt-specific data\n\n  // Canonical projection\n  digest         String // SHA-256 hash of content\n  previousDigest String? // Link to previous receipt\n  baselineDigest String? // Anchor to baseline\n\n  // Witness attestation\n  witnessModel     String? // ${MODEL_NAME} or ${FP_GPT5}\n  witnessSignature String? // Model fingerprint/signature\n\n  // Metadata\n  metadata  Json?\n  createdAt DateTime @default(now())\n\n  // Relations\n  handoffsFrom TriTrackHandoff[] @relation(\"FromReceipt\")\n  handoffsTo   TriTrackHandoff[] @relation(\"ToReceipt\")\n\n  @@index([lamportClock])\n  @@index([receiptType, lamportClock])\n  @@index([userId, lamportClock])\n  @@index([digest])\n  @@map(\"ben_receipts\")\n}\n\n// BEN Persona sessions (locks and switches)\nmodel BENSession {\n  id     Int  @id @default(autoincrement())\n  userId Int\n  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  persona  BENPersona\n  priority Int // ARCHITECT=99, GOVERNOR=90, ANALYST=80, VERIFIER=70, USER=0\n  locked   Boolean    @default(false)\n\n  // Session lifecycle\n  startedAt DateTime  @default(now())\n  endedAt   DateTime?\n  duration  Int? // seconds\n\n  // Lamport tracking\n  startLamport Int\n  endLamport   Int?\n\n  // Session metadata\n  switchReason String? @db.Text\n  metadata     Json?\n\n  @@index([userId, startedAt])\n  @@index([persona, startedAt])\n  @@map(\"ben_sessions\")\n}\n\n// Tri-Track handoff orchestration\nmodel TriTrackHandoff {\n  id Int @id @default(autoincrement())\n\n  // Handoff tracks\n  fromTrack TrackType\n  toTrack   TrackType\n  status    HandoffStatus @default(INITIATED)\n\n  // Receipt linking\n  fromReceiptId Int\n  fromReceipt   BENReceipt  @relation(\"FromReceipt\", fields: [fromReceiptId], references: [id], onDelete: Cascade)\n  toReceiptId   Int?\n  toReceipt     BENReceipt? @relation(\"ToReceipt\", fields: [toReceiptId], references: [id], onDelete: Cascade)\n\n  // Timing (≤60s latency constraint)\n  initiatedAt   DateTime  @default(now())\n  completedAt   DateTime?\n  latencyMs     Int? // milliseconds\n  exceededLimit Boolean   @default(false)\n\n  // Handoff data\n  payload      Json\n  result       Json?\n  errorMessage String? @db.Text\n\n  // Metadata\n  metadata Json?\n\n  @@index([fromTrack, toTrack, initiatedAt])\n  @@index([status, initiatedAt])\n  @@map(\"tri_track_handoffs\")\n}\n\n// Witness signature storage\nmodel WitnessSignature {\n  id Int @id @default(autoincrement())\n\n  // Model identification\n  modelName        String // ${MODEL_NAME}, ${FP_GPT5}, etc.\n  modelFingerprint String // Cryptographic fingerprint\n\n  // Receipt association\n  receiptId     Int?\n  receiptDigest String // Receipt digest being witnessed\n\n  // Signature data\n  signature    String // Model attestation signature\n  signedAt     DateTime @default(now())\n  lamportClock Int\n\n  // Verification\n  verified         Boolean   @default(false)\n  verifiedAt       DateTime?\n  verificationData Json?\n\n  // Metadata\n  metadata Json?\n\n  @@index([receiptDigest])\n  @@index([modelName, signedAt])\n  @@map(\"witness_signatures\")\n}\n\n// CRIES engine computation results\nmodel CRIESComputation {\n  id Int @id @default(autoincrement())\n\n  // Test association\n  testResultId Int?\n  userId       Int?\n\n  // CRIES components\n  sigmaWindow     Float // σ-window analysis (prompt quality)\n  tauThreshold    Float // τ-threshold (response coherence)\n  piPolicy        Float // Π-policy adherence\n  citationQuality Float // Citation coupling score\n\n  // Final score\n  criesScore Float // 0-100 scale\n\n  // Computation metadata\n  lamportClock Int\n  computedAt   DateTime @default(now())\n  receiptId    Int? // Δ-ANALYSIS receipt\n\n  // Analysis details\n  analysisData Json? // Detailed breakdown\n  metadata     Json?\n\n  @@index([criesScore, computedAt])\n  @@index([userId, computedAt])\n  @@map(\"cries_computations\")\n}\n\n// Z-Scan verification results\nmodel ZScanVerification {\n  id     Int   @id @default(autoincrement())\n  userId Int?\n  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  // Scan results\n  totalRules Int // Total rules checked\n  passed     Int // Number of rules that passed\n  warnings   Int // Number of warnings\n  critical   Int // Number of critical issues\n\n  // Detailed results\n  results Json // Array of ZScanResult objects\n  config  Json // ZScanConfig used for this scan\n\n  createdAt DateTime @default(now())\n\n  @@index([userId])\n  @@index([createdAt])\n  @@map(\"zscan_verifications\")\n}\n\nenum Role {\n  USER\n  ADMIN\n  ARCHITECT // Can modify system configuration\n  AUDITOR // Can view and verify audit logs\n  WITNESS // External verifier\n}\n\nenum Permission {\n  READ_LOGS\n  WRITE_LOGS\n  MANAGE_USERS\n  MANAGE_TEAMS\n  VERIFY_RECORDS\n  EXPORT_DATA\n  VIEW_ANALYTICS\n  MANAGE_SETTINGS\n}\n\nenum TeamRole {\n  OWNER\n  ADMIN\n  MEMBER\n  VIEWER\n}\n\nenum UserStatus {\n  ACTIVE\n  INACTIVE\n  SUSPENDED\n}\n\nenum UserTier {\n  FREE // Demo access only, predefined prompts\n  PAID // Full access, model uploads\n  ARCHITECT // System configuration access\n}\n\nenum OrgStatus {\n  ACTIVE\n  INACTIVE\n  SUSPENDED\n  TRIAL\n}\n\nenum PlanType {\n  TRIAL\n  BASIC\n  PRO\n  ENTERPRISE\n}\n\nenum AuditCategory {\n  AUTH // Authentication events\n  ACCESS // Access control changes\n  DATA // Data modifications\n  CONFIG // Configuration changes\n  VERIFICATION // Verification events\n  SYSTEM // System events\n}\n\nenum AuditStatus {\n  SUCCESS\n  FAILURE\n  WARNING\n  INFO\n}\n\nenum FeedbackType {\n  BUG\n  FEATURE\n  IMPROVEMENT\n  QUESTION\n  OTHER\n}\n\nenum FeedbackCategory {\n  UI_UX // User interface/experience issues\n  PERFORMANCE // Speed, loading, responsiveness\n  ACCURACY // Model accuracy, result quality\n  DOCUMENTATION // Docs, guides, examples\n  API // API functionality, integration\n  BILLING // Pricing, payments, invoices\n  SECURITY // Security concerns\n  GENERAL // General feedback\n}\n\nenum FeedbackPriority {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nenum FeedbackStatus {\n  OPEN\n  IN_PROGRESS\n  RESOLVED\n  CLOSED\n  WONT_FIX\n}\n\nenum SecurityEventType {\n  LOGIN_SUCCESS\n  LOGIN_FAILED\n  LOGOUT\n  PASSWORD_CHANGE\n  PASSWORD_RESET\n  TWO_FACTOR_ENABLED\n  TWO_FACTOR_DISABLED\n  TWO_FACTOR_VERIFIED\n  TWO_FACTOR_FAILED\n  ACCOUNT_LOCKED\n  ACCOUNT_UNLOCKED\n  IP_WHITELIST_ADDED\n  IP_WHITELIST_REMOVED\n  IP_BLOCKED\n  SESSION_CREATED\n  SESSION_TERMINATED\n  PERMISSION_CHANGED\n  SUSPICIOUS_ACTIVITY\n}\n\nenum SecuritySeverity {\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n\nenum SSOProvider {\n  SAML\n  AZURE_AD\n  GOOGLE\n  OKTA\n  GENERIC_OAUTH\n}\n\nenum SSOEventType {\n  SSO_LOGIN_SUCCESS\n  SSO_LOGIN_FAILED\n  SSO_LOGOUT\n  SSO_CONFIG_CREATED\n  SSO_CONFIG_UPDATED\n  SSO_CONFIG_DELETED\n  SSO_CONFIG_ENABLED\n  SSO_CONFIG_DISABLED\n  JIT_USER_CREATED\n  JIT_USER_UPDATED\n  SSO_SESSION_EXPIRED\n  SSO_CALLBACK_ERROR\n  SAML_ASSERTION_ERROR\n  OAUTH_TOKEN_ERROR\n}\n\n// BEN Runtime Enums\nenum BENPersona {\n  USER // Default user persona (priority 0)\n  VERIFIER // Verification role (priority 70)\n  ANALYST // Analysis role (priority 80)\n  GOVERNOR // Governance role (priority 90)\n  ARCHITECT // Architecture role (priority 99)\n}\n\nenum ReceiptType {\n  BOOT_CONFIRM // Δ-BOOTCONFIRM: Initialization receipt\n  ANALYSIS // Δ-ANALYSIS: BEN computation results\n  DIRECTIVE // Δ-DIRECTIVE: Governance commands\n  RESULT // Δ-RESULT: Execution outcomes\n  APPEND // Δ-APPEND: State mutations\n  SYNC_POINT // Δ-SYNCPOINT: Coordination markers\n}\n\nenum TrackType {\n  BEN_CORE // Track-A: BEN Core (Analyst role, enforces Π/τ)\n  AUDITAAI // Track-B: AuditaAI (Governor/Verifier, applies policies)\n  HUMAN // Track-C: Human (Executor, receives directives)\n}\n\nenum HandoffStatus {\n  INITIATED // Handoff started\n  IN_TRANSIT // Moving between tracks\n  COMPLETED // Handoff successful\n  FAILED // Handoff failed\n  TIMEOUT // Exceeded 60s latency limit\n}\n",
  "inlineSchemaHash": "c5a6889c53323b85cd5160801b69558d88ac97728cd4bb6abc2197f82d7a2075",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"tier\",\"kind\":\"enum\",\"type\":\"UserTier\"},{\"name\":\"permissions\",\"kind\":\"enum\",\"type\":\"Permission\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToUser\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UserStatus\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"twoFactorEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"twoFactorSecret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"backupCodes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"failedLoginAttempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lockedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"passwordChangedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ssoProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ssoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ssoMetadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"currentPersona\",\"kind\":\"enum\",\"type\":\"BENPersona\"},{\"name\":\"personaLocked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lamportCounter\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastReceiptId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"audits\",\"kind\":\"object\",\"type\":\"AuditRecord\",\"relationName\":\"AuditRecordToUser\"},{\"name\":\"teams\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamMemberToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"NotificationPreference\",\"relationName\":\"NotificationPreferenceToUser\"},{\"name\":\"budgets\",\"kind\":\"object\",\"type\":\"Budget\",\"relationName\":\"BudgetToUser\"},{\"name\":\"regressionBaselines\",\"kind\":\"object\",\"type\":\"RegressionBaseline\",\"relationName\":\"RegressionBaselineToUser\"},{\"name\":\"feedbacks\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"FeedbackToUser\"},{\"name\":\"benReceipts\",\"kind\":\"object\",\"type\":\"BENReceipt\",\"relationName\":\"BENReceiptToUser\"},{\"name\":\"benSessions\",\"kind\":\"object\",\"type\":\"BENSession\",\"relationName\":\"BENSessionToUser\"},{\"name\":\"zscans\",\"kind\":\"object\",\"type\":\"ZScanVerification\",\"relationName\":\"UserToZScanVerification\"}],\"dbName\":null},\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"enum\",\"type\":\"PlanType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrgStatus\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizationToUser\"},{\"name\":\"teams\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"OrganizationToTeam\"},{\"name\":\"ssoConfigs\",\"kind\":\"object\",\"type\":\"SSOConfiguration\",\"relationName\":\"OrganizationToSSOConfiguration\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToTeam\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamToTeamMember\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TeamMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamToTeamMember\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamMemberToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"TeamRole\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SharedTestCollection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testIds\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RateLimitQuota\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"limit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"used\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resetAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"windowMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TestTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPredefined\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sharedWith\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"useCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"favoriteCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Webhook\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"events\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"headers\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"payloadTemplate\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"retryEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"maxRetries\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"retryDelay\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalCalls\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"successCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"failureCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastTriggered\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastSuccess\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastFailure\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastError\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"WebhookLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"webhookId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"event\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"headers\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"statusCode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"responseBody\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responseTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"attempt\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ApiRateLimit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"limitType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"limitPeriod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentUsage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resetAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"warningThreshold\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastWarningAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"AuditRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"AuditCategory\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AuditStatus\"},{\"name\":\"lamport\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hashPointer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditRecordToUser\"}],\"dbName\":null},\"LamportState\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lamport\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"modified\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Budget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"limit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"period\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BudgetToUser\"}],\"dbName\":null},\"RegressionBaseline\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelVersion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avgResponseTime\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"avgCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"avgQualityScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"avgAccuracy\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"successRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"alertThreshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sampleSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RegressionBaselineToUser\"}],\"dbName\":null},\"Feedback\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"FeedbackType\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"FeedbackCategory\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"FeedbackPriority\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"attachmentUrls\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FeedbackStatus\"},{\"name\":\"assignedTo\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"respondedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"respondedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sentiment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sentimentScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"upvotes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FeedbackToUser\"}],\"dbName\":null},\"IpWhitelist\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SecurityEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"eventType\",\"kind\":\"enum\",\"type\":\"SecurityEventType\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"SecuritySeverity\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"resolved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"resolvedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TwoFactorBackup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"used\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SSOConfiguration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSSOConfiguration\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"SSOProvider\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"samlEntryPoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"samlIssuer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"samlCert\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"samlCallbackUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"samlLogoutUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oauthClientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oauthClientSecret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oauthAuthUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oauthTokenUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oauthUserInfoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oauthScopes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"domainRestriction\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jitProvisioning\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"defaultRole\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"defaultTier\",\"kind\":\"enum\",\"type\":\"UserTier\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SSOSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"SSOProvider\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nameId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionIndex\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attributes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastActivityAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SSOAuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orgId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"SSOProvider\"},{\"name\":\"eventType\",\"kind\":\"enum\",\"type\":\"SSOEventType\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"NotificationPreference\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationPreferenceToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emailEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"testComplete\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"batchComplete\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"scheduledTestComplete\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"alertsEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lowScoreThreshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"highScoreThreshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"scoreDropAlert\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"witnessFailureAlert\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"dailyReport\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"weeklyReport\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"monthlyReport\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"reportTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TestResult\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prompt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"criesScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"responseTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokenCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"LamportCounter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentValue\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastReceiptId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"lamport_counter\"},\"BENReceipt\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"receiptType\",\"kind\":\"enum\",\"type\":\"ReceiptType\"},{\"name\":\"lamportClock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"realTimestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BENReceiptToUser\"},{\"name\":\"persona\",\"kind\":\"enum\",\"type\":\"BENPersona\"},{\"name\":\"track\",\"kind\":\"enum\",\"type\":\"TrackType\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"digest\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previousDigest\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"baselineDigest\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"witnessModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"witnessSignature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"handoffsFrom\",\"kind\":\"object\",\"type\":\"TriTrackHandoff\",\"relationName\":\"FromReceipt\"},{\"name\":\"handoffsTo\",\"kind\":\"object\",\"type\":\"TriTrackHandoff\",\"relationName\":\"ToReceipt\"}],\"dbName\":\"ben_receipts\"},\"BENSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BENSessionToUser\"},{\"name\":\"persona\",\"kind\":\"enum\",\"type\":\"BENPersona\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"locked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startLamport\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"endLamport\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"switchReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"ben_sessions\"},\"TriTrackHandoff\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fromTrack\",\"kind\":\"enum\",\"type\":\"TrackType\"},{\"name\":\"toTrack\",\"kind\":\"enum\",\"type\":\"TrackType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"HandoffStatus\"},{\"name\":\"fromReceiptId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fromReceipt\",\"kind\":\"object\",\"type\":\"BENReceipt\",\"relationName\":\"FromReceipt\"},{\"name\":\"toReceiptId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"toReceipt\",\"kind\":\"object\",\"type\":\"BENReceipt\",\"relationName\":\"ToReceipt\"},{\"name\":\"initiatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"latencyMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"exceededLimit\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"tri_track_handoffs\"},\"WitnessSignature\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelFingerprint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiptId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"receiptDigest\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lamportClock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"verificationData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"witness_signatures\"},\"CRIESComputation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"testResultId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sigmaWindow\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tauThreshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"piPolicy\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"citationQuality\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"criesScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lamportClock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"computedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receiptId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"analysisData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"cries_computations\"},\"ZScanVerification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToZScanVerification\"},{\"name\":\"totalRules\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"passed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"warnings\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"critical\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"results\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"zscan_verifications\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)


name: Playwright E2E

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      target:
        description: 'Where to run tests: local (build & start) or deployed (run against deployed URL)'
        required: true
        default: 'local'
        type: choice
        options:
          - local
          - deployed
      base_url:
        description: 'If target=deployed, the base URL to test (e.g. https://auditaai.vercel.app)'
        required: false
        default: ''
      database_url:
        description: 'Optional DATABASE_URL to use for job (overrides secret)'
        required: false
        default: ''
      run_suite:
        description: 'Which test suite to run (passed as env to Playwright). Options: all, founder, smoke'
        required: false
        default: 'all'

jobs:
  e2e:
    name: Playwright E2E tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    # Use Playwright's official image which includes browsers and system libs.
    container:
      image: mcr.microsoft.com/playwright:v1.56.1-focal
    env:
      # Default vars; specific steps may override based on workflow inputs
      PLAYWRIGHT_BASE_URL: ${{ github.event.inputs.base_url || 'http://localhost:3000' }}
      # DATABASE_URL uses provided input if present, otherwise falls back to repo secret
      DATABASE_URL: ${{ github.event.inputs.database_url || secrets.DATABASE_URL }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      RUN_SUITE: ${{ github.event.inputs.run_suite || 'all' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Enable corepack and pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile
        working-directory: frontend

      - name: Generate NEXTAUTH_SECRET for this job
        # Generate a 32-byte hex secret using node so we don't rely on OpenSSL availability
        run: |
          echo "NEXTAUTH_SECRET=$(node -e \"console.log(require('crypto').randomBytes(32).toString('hex'))\")" >> $GITHUB_ENV

      - name: Build frontend
        run: pnpm build
        working-directory: frontend

      - name: Start frontend (background)
        run: pnpm start &
        working-directory: frontend

      - name: Wait for frontend to be ready
        run: npx wait-on http://localhost:3000 --timeout 120000

      - name: Run Playwright tests
        run: PLAYWRIGHT_BASE_URL=http://localhost:3000 pnpm exec playwright test --config=playwright.config.ts --reporter=list
        working-directory: frontend

      - name: Upload Playwright report artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report

name: Playwright E2E and Auto-Fix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  e2e:
    name: Run Playwright E2E (local backend)
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.56.1-focal
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client (backend)
        working-directory: ./backend
        run: pnpm exec prisma generate || true

      - name: Start backend server
        run: |
          nohup node backend/server.js > /tmp/backend-ci.log 2>&1 &
          for i in {1..10}; do
            sleep 1
            if curl --silent --fail http://localhost:3001/health >/dev/null 2>&1; then
              echo "backend ready"; break
            fi
            echo "waiting for backend..."
          done

      - name: Run Playwright E2E script (backend)
        run: TARGET_HOST=http://localhost:3001 node backend/scripts/playwright_bypass.cjs

  auto-fix:
    name: Auto-fix and open PR
    needs: e2e
    if: needs.e2e.result == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run auto-fix script
        run: |
          chmod +x ./scripts/auto_fix.sh
          ./scripts/auto_fix.sh

      - name: Create Pull Request with fixes
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(e2e): auto-fix lint/format from failing E2E"
          title: "chore(e2e): auto-fix lint/format from failing E2E"
          body: |
            This PR was created automatically by CI after E2E tests failed.
            The auto-fix script applied lint/format fixes (eslint --fix / prettier) and committed them.
            Please review and merge if acceptable.
name: Playwright E2E and Auto-Fix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client (backend)
        working-directory: ./backend
        run: pnpm exec prisma generate || true

      - name: Start backend server
        run: |
          nohup node backend/server.js > /tmp/backend-ci.log 2>&1 &
          # wait for server to start
          for i in 1 2 3 4 5; do
            sleep 1
            if curl --silent --fail http://localhost:3001/health >/dev/null 2>&1; then
              echo "backend ready"; break
            fi
          done

      - name: Run Playwright E2E script
        run: TARGET_HOST=http://localhost:3001 node backend/scripts/playwright_bypass.cjs

  auto-fix:
    needs: e2e
    if: needs.e2e.result == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Make auto-fixes
        run: |
          chmod +x ./scripts/auto_fix.sh
          ./scripts/auto_fix.sh

      - name: Create Pull Request with fixes
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(e2e): auto-fix lint/format from failing E2E"
          title: "chore(e2e): auto-fix lint/format from failing E2E"
          body: |
            This PR was created automatically by CI after E2E tests failed.
            The auto-fix script applied lint/format fixes (eslint --fix / prettier) and committed them.
            Please review and merge if acceptable.
name: Playwright E2E

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Where to run tests: local (build & start) or deployed (run against deployed URL)'
        required: true
        default: 'local'
        type: choice
        options:
          - local
          - deployed
      base_url:
        description: 'If target=deployed, the base URL to test (e.g. https://auditaai.vercel.app)'
        required: false
        default: ''
      database_url:
        description: 'Optional DATABASE_URL to use for job (overrides secret)'
        required: false
        default: ''
      run_suite:
        description: 'Which test suite to run (passed as env to Playwright). Options: all, founder, smoke'
        required: false
        default: 'all'

jobs:
  e2e:
    name: Playwright E2E tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    # Use Playwright's official image which includes browsers and system libs.
    container:
      image: mcr.microsoft.com/playwright:v1.56.1-focal
    env:
      # Default vars; specific steps may override based on workflow inputs
      PLAYWRIGHT_BASE_URL: ${{ github.event.inputs.base_url || 'http://localhost:3000' }}
      # DATABASE_URL uses provided input if present, otherwise falls back to repo secret
      DATABASE_URL: ${{ github.event.inputs.database_url || secrets.DATABASE_URL }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      RUN_SUITE: ${{ github.event.inputs.run_suite || 'all' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Enable corepack and pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile
        working-directory: frontend

      - name: Generate NEXTAUTH_SECRET for this job
        # Generate a 32-byte hex secret using node so we don't rely on OpenSSL availability
        run: |
          echo "NEXTAUTH_SECRET=$(node -e \"console.log(require('crypto').randomBytes(32).toString('hex'))\")" >> $GITHUB_ENV

      - name: Build frontend
        run: pnpm build
        working-directory: frontend

      - name: Start frontend (background)
        run: pnpm start &
        working-directory: frontend

      - name: Wait for frontend to be ready
        run: npx wait-on http://localhost:3000 --timeout 120000

      - name: Run Playwright tests
        run: PLAYWRIGHT_BASE_URL=http://localhost:3000 pnpm exec playwright test --config=playwright.config.ts --reporter=list
        working-directory: frontend

      - name: Upload Playwright report artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report

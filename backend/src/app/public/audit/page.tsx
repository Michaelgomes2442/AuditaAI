"use client";

import { useEffect, useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Shield, Hash, Clock, Key, XCircle, Eye } from "lucide-react";

export default function PublicAuditPage() {
  const [receipts, setReceipts] = useState<any[]>([]);
  const [selected, setSelected] = useState<any | null>(null);
  const [loading, setLoading] = useState(true);

  async function fetchReceipts() {
    try {
      const res = await fetch("/api/receipts");
      if (res.ok) {
        const data = await res.json();
        setReceipts(data);
      }
    } finally {
      setLoading(false);
    }
  }

  useEffect(() => {
    fetchReceipts();
  }, []);

  return (
    <main className="min-h-screen bg-gray-950 text-gray-100 p-8">
      <h1 className="text-3xl font-semibold text-blue-400 flex items-center gap-2 mb-8">
        <Shield size={24} /> Public Audit Feed
      </h1>

      {loading ? (
        <p className="text-gray-500">Loading signed Δ-receipts…</p>
      ) : receipts.length === 0 ? (
        <p className="text-gray-500">No Δ-receipts available yet.</p>
      ) : (
        <div className="space-y-3">
          {receipts.map((r) => (
            <div
              key={r.id}
              className="flex items-center justify-between bg-gray-900/70 border border-gray-800 rounded-lg p-4 hover:border-blue-700/40 transition"
            >
              <div>
                <p className="text-gray-200 font-medium flex items-center gap-2">
                  <Hash size={14} /> Δ-Receipt #{r.lamportCounter}
                </p>
                <p className="text-sm text-gray-400 mt-1 flex items-center gap-1">
                  <Clock size={13} /> {new Date(r.createdAt).toLocaleString()}
                </p>
                <p className="text-sm text-gray-400 mt-1">
                  {r.description} – <span className="text-blue-400">{r.category}</span>
                </p>
              </div>
              <button
                onClick={() => setSelected(r)}
                className="text-blue-400 text-sm flex items-center gap-1 hover:text-blue-300"
              >
                <Eye size={14} /> View Attestation
              </button>
            </div>
          ))}
        </div>
      )}

      {/* Modal */}
      <AnimatePresence>
        {selected && (
          <motion.div
            className="fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
          >
            <motion.div
              className="bg-gray-900 border border-gray-800 rounded-xl p-6 w-[500px] max-w-[90%] shadow-xl"
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
            >
              <div className="flex justify-between items-center mb-4">
                <h2 className="text-xl font-semibold text-blue-400 flex items-center gap-2">
                  <Hash size={18} /> Δ-Receipt #{selected.lamportCounter}
                </h2>
                <button
                  onClick={() => setSelected(null)}
                  className="text-gray-400 hover:text-gray-200 transition"
                >
                  <XCircle size={22} />
                </button>
              </div>

              <pre className="bg-gray-950 border border-gray-800 rounded-md text-sm text-gray-300 p-3 overflow-x-auto max-h-64">
{JSON.stringify(selected, null, 2)}
              </pre>

              <div className="mt-4 text-xs text-gray-400">
                Attestation Hash:{" "}
                <span className="text-blue-400 font-mono">
                  {crypto
                    .createHash("sha256")
                    .update(JSON.stringify(selected))
                    .digest("hex")
                    .slice(0, 32)}
                  …
                </span>
              </div>

              <p className="text-xs text-gray-500 mt-2">
                Public read-only proof generated by AuditaAI.
              </p>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </main>
  );
}
